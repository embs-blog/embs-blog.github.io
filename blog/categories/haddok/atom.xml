<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Categoria: Haddok | Título do Blog]]></title>
  <link href="http://embs.blog.br/blog/categories/haddok/atom.xml" rel="self"/>
  <link href="http://embs.blog.br/"/>
  <updated>2014-03-20T15:40:14-03:00</updated>
  <id>http://embs.blog.br/</id>
  <author>
    <name><![CDATA[embs]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Documentação Automática De Haskell Com Haddock]]></title>
    <link href="http://embs.blog.br/blog/2012/03/17/documentacao-automatica-de-haskell-com-haddock/"/>
    <updated>2012-03-17T18:43:17-03:00</updated>
    <id>http://embs.blog.br/blog/2012/03/17/documentacao-automatica-de-haskell-com-haddock</id>
    <content type="html"><![CDATA[<p>E aí!</p>

<p>O <a href="http://www.haskell.org/haddock/">Haddock</a> é uma ferramenta de geração
automática de documentação para código Haskell. Atualmente, apesar de eventuais
bugs e dificuldades de utilização, ele está sendo mantido por seus idealizadores.
Quem utiliza GHC provavelmente já dispõe do comando <code>&gt; haddock</code>.</p>

<p>Depois de labutar um bocado, consegui gerar documentação em formato HTML a partir
de meu código Haskell.</p>

<!-- more -->


<ul>
<li>O código
```haskell
&mdash; | &lsquo;Primos&rsquo; agrega funções relacionadas aa primalidade dos numerais.
module Primos where
{
&mdash; | A função &lsquo;crivo&rsquo; recebe um número maior que zero e retorna uma lista de Int com todos os números primos até n. Ela utiliza a função &lsquo;ehPrimo&rsquo; para descobrir se um número é primo. :)
;
crivo :: Int &ndash;> [Int];
crivo n = if n &lt; 2 then [] else [y | y &lt;&ndash; [2..n], ehPrimo y];</li>
</ul>


<p>&mdash; | &lsquo;ehPrimo&rsquo; recebe um número inteiro maior que zero e retorna True se ele for primo ou False caso contrário.
;
ehPrimo :: Int &ndash;> Bool;
ehPrimo 1 = False;
ehPrimo n = (null [y | y &lt;&ndash; [1..(truncate(sqrt (fromIntegral n)))], n <code>mod</code> y == 0, y /= n, y /= 1]);
}
<code>
* O comando
</code>bash
$ mkdir HaddockDoc
$ haddock -h -o HaddockDoc/ Primos.hs
```</p>

<ul>
<li>O Resultado</li>
</ul>


<p>Você vê abrindo o index.html na nova pasta HaddockDoc</p>

<p>Valeu!</p>
]]></content>
  </entry>
  
</feed>

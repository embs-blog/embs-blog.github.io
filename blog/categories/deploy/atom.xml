<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Categoria: Deploy | Título do Blog]]></title>
  <link href="http://embs.blog.br/blog/categories/deploy/atom.xml" rel="self"/>
  <link href="http://embs.blog.br/"/>
  <updated>2014-03-20T15:40:14-03:00</updated>
  <id>http://embs.blog.br/</id>
  <author>
    <name><![CDATA[embs]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Como Fazer Deploy De Aplicações Rails No Heroku]]></title>
    <link href="http://embs.blog.br/blog/2013/03/07/como-fazer-deploy-de-aplicacoes-rails-no-heroku/"/>
    <updated>2013-03-07T19:37:13-03:00</updated>
    <id>http://embs.blog.br/blog/2013/03/07/como-fazer-deploy-de-aplicacoes-rails-no-heroku</id>
    <content type="html"><![CDATA[<p>Você vai precisar de:</p>

<ul>
<li>Conta no <a href="http://www.heroku.com/">Heroku</a>;</li>
<li><a href="http://naofalacomputa.blogspot.com.br/2013/02/configurando-ambiente-de.html">Ambiente preparado</a> para criação de app Rails;</li>
</ul>


<p>Vamos, primeiro, criar a aplicação Rails:
<code>bash
$ rails new hello_heroku
</code>
Já temos uma aplicação Rails pronta para ser mandada ao ambiente de produção do Heroku, certo? Certo. Mas vamos fazer uma modificação mínima para que a aplicação não fique apenas na tela de boas vindas do Rails. Remova o arquivo public/index.html e adicione uma nova rota ao config/routes.rb
```ruby</p>

<h1>routes.rb</h1>

<p>HelloHeroku::Application.routes.draw do
  root to: &lsquo;welcome#index&rsquo;
  # ou root :to => &lsquo;welcome#index&rsquo; se você estiver usando uma versão do ruby &lt; 1.9
end
```</p>

<!-- more -->


<p>Isso fará com que qualquer requisição get à raiz da nossa aplicação seja direcionado para a action index do nosso controlador WelcomeController (que, por sinal, ainda não temos) &mdash; como podemos ver ao executar &lsquo;rake routes&rsquo;:</p>

<p><img src="http://i.minus.com/ibkNUWUx72wCGL.png" alt="img" /></p>

<p>O próximo passo é óbvio: criar o WelcomeController. Para evitar qualquer arquivo desnecessário que o generator do Rails pode, eventualmente, criar, façamos isso na mão. Basta criar um arquivo chamado welcome_controller.rb no diretório app/controllers/ com uma única action vazia index:
```ruby</p>

<h1>app/controllers/welcome_controller.rb</h1>

<p>class WelcomeController &lt; ApplicationController
  def index
  end
end
<code>
Como não fazemos nada na action index, ela simplesmente irá renderizar a view index.html.erb que deve estar presente em app/views/welcome/:
</code>erb
&lt;%# app/views/welcome/index.html.erb %>
<b>Hello, Heroku!</b><br />
&lt;%= l Time.now, format: :short %>
```
Pronto. Nossa prolífica aplicação Rails está pronta para ir pra produção! Se tiver dado tudo certo até aqui, você deve visualizar algo parecido com a imagem abaixo ao rodar o servidor (rails s) e acessar &lsquo;localhost:3000&rsquo;:</p>

<p><img src="http://i.minus.com/iZZAZSDzx9co5.png" alt="img" /></p>

<p>O próximo passo é criar a aplicação no Heroku. Para isso, é necessário que você disponha do ToolBelt do Heroku &mdash; uma espécie de kit de ferramentas composto por comandos que tornam a tarefa de deploy (e outras) trivial. O ToolBelt pode ser instalado facilmente e as instruções para instalação são encontradas no próprio sítio do Heorku. Em sistemas Debian-like, é feito com um único passo:
<code>bash
$ wget -qO- https://toolbelt.heroku.com/install-ubuntu.sh | sh
</code>
ToolBelt instalado, é hora de autenticar com a conta do Heroku (com o comando &lsquo;heroku login&rsquo;). Por exemplo:</p>

<p><img src="http://i.minus.com/ibkG6ZxcMa4eUd.png" alt="img" /></p>

<p>Depois basta criar a app no Heroku usando o comando heroku apps:create (seja mais criativo que eu e escolha um nome que ainda não exista entre as apps cadastradas no Heroku):</p>

<p><img src="http://i.minus.com/i8Lx4s1ryZRgi.png" alt="img" /></p>

<p>Pra terminar, vamos dar o deploy &mdash; que é tão fácil quanto dar um push usando o Git. Na verdade, é um push usando o Git. &ldquo;Mas, peraí, você não disse nada de Git e agora vem com essa história aí&hellip; vou ter que saber usar essa parada pra poder dar o deploy, pensei que fosse fácil, não vale a pena usar isso, não, é melhor pagar por uma solução mais fácil ou já sei: vou pagar pra alguém fazer isso pra mim&rdquo; é o que você vai pensar se souber usar vírgulas no pensamento. Pois é. Continue chorando ou instale e configure o Git (se você estiver usando Windows, sugiro que continue chorando).</p>

<p>O Github possui artigos muito bons que ajudam pra caralho quando se encontra algum problema relacionado ao Git. Problemas com chaves, por exemplo: <a href="https://help.github.com/articles/generating-ssh-keys.">https://help.github.com/articles/generating-ssh-keys.</a> É só procurar. <a href="https://help.github.com">https://help.github.com</a> :)</p>

<p>Agora que você já deu a última soluçada do pranto e decidiu não mudar de aba me xingando, vamos adicionar o remoto que o Heroku dispõe para toda app que é hosteada lá e que pode ser encontrado clicando nos links no Heroku: Apps >> NomeDeSuaApp >> Settings</p>

<p><img src="http://i.minus.com/irxiP8YXet3R5.png" alt="img" /></p>

<p>Aí está: git@heroku.com:hello-heroku-naofalacomputa.git. Dava até pra ter inferido. Enfim&hellip;</p>

<p><img src="http://i.minus.com/iOWRWpFtvp0Fn.png" alt="img" /></p>

<p>Ah, gordo escroto, não dá pra copiar e colar da imagem. Vou quebrar teu galho&hellip;
```bash</p>

<h1>inicia repositório git</h1>

<p>$ git init</p>

<h1>adiciona remote do heroku</h1>

<p>$ git remote add heroku SUA_URL_GIT</p>

<h1>lista seus remotos</h1>

<p>$ git remote -v
<code>
Agora, sim, é só dar o push!
</code></p>

<h1>não sem antes criar o commit, claro :)</h1>

<p>$ git add . # adiciona tudo</p>

<p>$ git commit -m &ldquo;Primeiro commit&rdquo; # cria o commit</p>

<p>$ git push heroku master # deploy!
```
O resultado do push pro Heroku é assaz comprido. Divirta-se com a leitura. Se você não fez nenhuma merda e for um bom aprendiz, deve ver a aplicação rodando na URL da app no Heroku:</p>

<p><img src="http://i.minus.com/ibabshYbOOa6iB.png" alt="img" /></p>

<h3>Observação Importante e Bastante Pertinente</h3>

<p>O Rails, por default, utiliza a gem do sqlite. O Heroku, compulsoriamente, utiliza um BD Postgres. Se você tentar dar deploy de uma app Rails com a gem do sqlite listada no seu Gemfile, vai dar merda. Remova ou comente a linha que especifica essa gem, adicione uma linha especificando a gem do Postgres (&ldquo;gem &lsquo;pg&rsquo;&rdquo;) e não esqueça de rodar o bundle antes de criar o novo commit para o push correto pro Heroku.</p>

<h3>Observação Pertinente mas de Pouca Importância</h3>

<p>Não, eu não estou às 3h da matina do dia 07 de Março escrevendo um tutorial de como fazer deploy de aplicações Rails no Heroku. A hora apareceu assim deturpada por conta da configuração da localização da app Rails. Mas isso fica pra uma próxima&hellip;</p>
]]></content>
  </entry>
  
</feed>
